/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vue;

import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HomePC
 */
public class Formdemande extends javax.swing.JFrame {

    /**
     * Creates new form Formdemande
     */
    public Formdemande() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLdate = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLmeddemandeur = new javax.swing.JLabel();
        jTmeddemandeur = new javax.swing.JTextField();
        jLechaliste = new javax.swing.JLabel();
        jTechaliste = new javax.swing.JTextField();
        jBenregistrer = new javax.swing.JButton();
        jBvisualiser = new javax.swing.JButton();
        jBinitialiser = new javax.swing.JButton();
        jBmodifier = new javax.swing.JButton();
        jBsupprimer = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jTrechercher = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLdate.setText("Date");

        jLmeddemandeur.setText("Medecin demandeur");

        jLechaliste.setText("Liste d'echantillons associes");

        jBenregistrer.setForeground(new java.awt.Color(102, 255, 102));
        jBenregistrer.setText("Enregistrer");
        jBenregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBenregistrerActionPerformed(evt);
            }
        });

        jBvisualiser.setText("Visualiser");
        jBvisualiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBvisualiserActionPerformed(evt);
            }
        });

        jBinitialiser.setText("Initialiser");
        jBinitialiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBinitialiserActionPerformed(evt);
            }
        });

        jBmodifier.setText("Modifier");
        jBmodifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBmodifierActionPerformed(evt);
            }
        });

        jBsupprimer.setForeground(new java.awt.Color(255, 51, 51));
        jBsupprimer.setText("Supprimer");
        jBsupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBsupprimerActionPerformed(evt);
            }
        });

        jButton1.setForeground(new java.awt.Color(0, 0, 255));
        jButton1.setText("Rechercher");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 51, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID demande", "Date de demande", "Medecin demandeur", "Liste d'echantions associe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(153, 153, 255));
        jTable1.setSelectionBackground(new java.awt.Color(204, 255, 204));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLechaliste, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTechaliste, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jBenregistrer)
                                .addGap(18, 18, 18)
                                .addComponent(jBvisualiser)
                                .addGap(18, 18, 18)
                                .addComponent(jBinitialiser)
                                .addGap(18, 18, 18)
                                .addComponent(jBmodifier)
                                .addGap(18, 18, 18)
                                .addComponent(jBsupprimer))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLmeddemandeur)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTmeddemandeur, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTrechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLdate)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTrechercher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLmeddemandeur)
                    .addComponent(jTmeddemandeur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLechaliste)
                    .addComponent(jTechaliste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBenregistrer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBvisualiser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBinitialiser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBmodifier, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBsupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(205, 205, 205))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private Connection connect() {
    String url = "jdbc:mysql://localhost:3306/laboratoire_hopital_hope";
    String user = "root";
    String password = "";
    Connection conn = null;
    try {
        conn = DriverManager.getConnection(url, user, password);
    } catch (SQLException e) {
        System.out.println(e.getMessage());
    }
    return conn;
}
    private void jBenregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBenregistrerActionPerformed
        // TODO add your handling code here:
        enregistrerdemande();
    }//GEN-LAST:event_jBenregistrerActionPerformed

    private void jBvisualiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBvisualiserActionPerformed
        // TODO add your handling code here:
        visualiserdemandeData();
    }//GEN-LAST:event_jBvisualiserActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:                                        
    int selectedRow = jTable1.getSelectedRow();

    // Obtenir la valeur de la date et la convertir en java.util.Date
    String dateString = jTable1.getValueAt(selectedRow, 1).toString();
    java.util.Date date = parseDate(dateString);

    // Mettre à jour le jDateChooser avec la date
    jDateChooser1.setDate(date);
    jTmeddemandeur.setText(jTable1.getValueAt(selectedRow, 2).toString());
    jTechaliste.setText(jTable1.getValueAt(selectedRow, 3).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jBinitialiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBinitialiserActionPerformed
        // TODO add your handling code here:
        initialiserFields();
    }//GEN-LAST:event_jBinitialiserActionPerformed

    private void jBmodifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBmodifierActionPerformed
        // TODO add your handling code here:
        modifierClient();
    }//GEN-LAST:event_jBmodifierActionPerformed

    private void jBsupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBsupprimerActionPerformed
        // TODO add your handling code here:
        supprimerClient();
    }//GEN-LAST:event_jBsupprimerActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        rechercherClient();
    }//GEN-LAST:event_jButton1ActionPerformed
private void enregistrerdemande() {
    String sql = "INSERT INTO demandes(Date_demande, Medecin_demandeur, Liste_echas_associes) VALUES(?, ?, ?)";

    try (Connection conn = this.connect();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        java.util.Date utilDate = jDateChooser1.getDate();
        java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
        pstmt.setDate(1, sqlDate);
        pstmt.setString(2, jTmeddemandeur.getText());
        pstmt.setString(3, jTechaliste.getText());

        pstmt.executeUpdate();
        JOptionPane.showMessageDialog(null, "Client enregistré avec succès");

    } catch (SQLException e) {
        System.out.println(e.getMessage());
    }
}

private void visualiserdemandeData() {
        String sql = "SELECT * FROM demandes";
        
        try (Connection conn = this.connect();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("Id_demandes"),
                    rs.getString("Date_demande"),
                    rs.getString("Medecin_demandeur"),
                    rs.getString("Liste_echas_associes"),
                };
                model.addRow(row);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erreur lors du chargement des données : " + e.getMessage());
        }
    }
 private void initialiserFields() {
        jDateChooser1.setDate(null);
        jTmeddemandeur.setText("");
        jTechaliste.setText("");
    }
 private void modifierClient() {
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            int Id_demandes = (int) jTable1.getValueAt(selectedRow, 0);
            String sql = "UPDATE demandes SET Date_demande = ?, Medecin_demandeur = ?, Liste_echas_associes = ? WHERE Id_demandes = ?";

            try (Connection conn = this.connect();
                 PreparedStatement pstmt = conn.prepareStatement(sql)) {

                java.util.Date utilDate = jDateChooser1.getDate();
                java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
                pstmt.setDate(1, sqlDate);
                pstmt.setString(2, jTmeddemandeur.getText());
                pstmt.setString(3, jTechaliste.getText());
                pstmt.setInt(4, Id_demandes);

                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Demande modifiée avec succès");
                visualiserdemandeData();

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Erreur lors de la modification des données : " + e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner une demande à modifier");
        }
    }
  private java.util.Date parseDate(String dateString) {
    SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
    java.util.Date date = null;
    try {
        date = format.parse(dateString);
    } catch (ParseException e) {
        // Gestion simple : mettre la date à null en cas d'échec de parsing
        System.err.println("Erreur de parsing de la date: " + dateString);
    }
    return date;
}
  private void supprimerClient() {
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            String clientId = jTable1.getValueAt(selectedRow, 0).toString();
            String sql = "DELETE FROM demandes WHERE Id_demandes = ?";

            try (Connection conn = this.connect();
                 PreparedStatement pstmt = conn.prepareStatement(sql)) {

                pstmt.setString(1, clientId);
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Demande supprimée avec succès");
                visualiserdemandeData();
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Veuillez sélectionner une demande à supprimer");
        }
    }
private void rechercherClient() {
        String searchTerm = jTrechercher.getText();
        String sql = "SELECT * FROM demandes WHERE Date_demande LIKE ? OR Medecin_demandeur LIKE ? OR Liste_echas_associes LIKE ?";
        
        try (Connection conn = this.connect();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {
            
            String searchPattern = "%" + searchTerm + "%";
            pstmt.setString(1, searchPattern);
            pstmt.setString(2, searchPattern);
            pstmt.setString(3, searchPattern);

            ResultSet rs = pstmt.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);

            while (rs.next()) {
                model.addRow(new Object[]{
                        rs.getInt("Id_demandes"),
                        rs.getString("Date_demande"),
                        rs.getString("Medecin_demandeur"),
                        rs.getString("Liste_echas_associes"),
                });
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formdemande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formdemande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formdemande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formdemande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formdemande().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBenregistrer;
    private javax.swing.JButton jBinitialiser;
    private javax.swing.JButton jBmodifier;
    private javax.swing.JButton jBsupprimer;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jBvisualiser;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLdate;
    private javax.swing.JLabel jLechaliste;
    private javax.swing.JLabel jLmeddemandeur;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTechaliste;
    private javax.swing.JTextField jTmeddemandeur;
    private javax.swing.JTextField jTrechercher;
    // End of variables declaration//GEN-END:variables
}
