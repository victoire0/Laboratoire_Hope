/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vue;

import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author HomePC
 */
public class Formresultat extends javax.swing.JFrame {

    /**
     * Creates new form Formresultat
     */
    public Formresultat() {
        initComponents();
        infoEchantillon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLdateresu = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLechaana = new javax.swing.JLabel();
        jTechaana = new javax.swing.JTextField();
        jLinfoecha = new javax.swing.JLabel();
        jBenregistrer = new javax.swing.JButton();
        jBvisualiser = new javax.swing.JButton();
        jBinitialiser = new javax.swing.JButton();
        jBmodifier = new javax.swing.JButton();
        jBsupprimer = new javax.swing.JButton();
        jBrechercher = new javax.swing.JButton();
        jTrechercher = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLdateresu.setText("Date du résultat");

        jLechaana.setText("Echantillon analysé");

        jLinfoecha.setText("ID échantillon");

        jBenregistrer.setForeground(new java.awt.Color(0, 255, 0));
        jBenregistrer.setText("Enregistrer");
        jBenregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBenregistrerActionPerformed(evt);
            }
        });

        jBvisualiser.setText("Visualiser");
        jBvisualiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBvisualiserActionPerformed(evt);
            }
        });

        jBinitialiser.setText("Initialiser");
        jBinitialiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBinitialiserActionPerformed(evt);
            }
        });

        jBmodifier.setText("Modifier");
        jBmodifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBmodifierActionPerformed(evt);
            }
        });

        jBsupprimer.setForeground(new java.awt.Color(255, 0, 0));
        jBsupprimer.setText("Supprimer");
        jBsupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBsupprimerActionPerformed(evt);
            }
        });

        jBrechercher.setForeground(new java.awt.Color(0, 51, 204));
        jBrechercher.setText("Rechercher");
        jBrechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBrechercherActionPerformed(evt);
            }
        });

        jComboBox1.setForeground(new java.awt.Color(0, 51, 204));

        jTable1.setForeground(new java.awt.Color(0, 51, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID résultat", "Date du résultat", "Echantillons analysés", "ID échantillon"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 635, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(297, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLdateresu)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTrechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLechaana)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTechaana, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLinfoecha)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jBenregistrer)
                                        .addGap(18, 18, 18)
                                        .addComponent(jBvisualiser)
                                        .addGap(18, 18, 18)
                                        .addComponent(jBinitialiser)
                                        .addGap(18, 18, 18)
                                        .addComponent(jBmodifier)
                                        .addGap(18, 18, 18)
                                        .addComponent(jBsupprimer)))
                                .addGap(0, 77, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBrechercher))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLdateresu))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLechaana)
                            .addComponent(jTechaana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLinfoecha)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBenregistrer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBvisualiser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBinitialiser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBmodifier, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBsupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBrechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTrechercher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(68, 68, 68)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private Connection connect() {
    String url = "jdbc:mysql://localhost:3306/laboratoire_hopital_hope";
    String user = "root";
    String password = "";
    Connection conn = null;
    try {
        conn = DriverManager.getConnection(url, user, password);
    } catch (SQLException e) {
        System.out.println(e.getMessage());
    }
    return conn;
}
private void infoEchantillon() {
        String sql = "SELECT Id_echantillons, Date_prelevement FROM Echantillons";
        try (Connection conn = this.connect();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
            while (rs.next()) {
                String idMeddemandeurDemande = rs.getInt("Id_echantillons") + " / " + rs.getString("Date_prelevement");
                model.addElement(idMeddemandeurDemande);
            }
            jComboBox1.setModel(model);

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }
private java.util.Date parseDate(String dateString) {
    SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
    java.util.Date date = null;
    try {
        date = format.parse(dateString);
    } catch (ParseException e) {
        // Gestion simple : mettre la date à null en cas d'échec de parsing
        System.err.println("Erreur de parsing de la date: " + dateString);
    }
    return date;
}
private void jjTable1MouseClicked() {                                         
            int selectedRow = jTable1.getSelectedRow();
            if (selectedRow != -1) { 
            String dateString = jTable1.getValueAt(selectedRow, 1).toString();
            java.util.Date date = parseDate(dateString);
           
            jDateChooser1.setDate(date);
            jTechaana.setText(jTable1.getValueAt(selectedRow, 2).toString());
            jComboBox1.setSelectedItem(jTable1.getValueAt(selectedRow, 3).toString());
        }
    }
    private void jBenregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBenregistrerActionPerformed
        // TODO add your handling code here:
        enregistrerresultat();
    }//GEN-LAST:event_jBenregistrerActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        jjTable1MouseClicked();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jBvisualiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBvisualiserActionPerformed
        // TODO add your handling code here:
        visualiserresultatData();
    }//GEN-LAST:event_jBvisualiserActionPerformed

    private void jBinitialiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBinitialiserActionPerformed
        // TODO add your handling code here:
        initialiserFields();
    }//GEN-LAST:event_jBinitialiserActionPerformed

    private void jBmodifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBmodifierActionPerformed
        // TODO add your handling code here:
        modifierresultat();
    }//GEN-LAST:event_jBmodifierActionPerformed

    private void jBsupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBsupprimerActionPerformed
        // TODO add your handling code here:
        supprimerresultat();
    }//GEN-LAST:event_jBsupprimerActionPerformed

    private void jBrechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBrechercherActionPerformed
        // TODO add your handling code here:
        rechercherresultat();
    }//GEN-LAST:event_jBrechercherActionPerformed
private void enregistrerresultat() {
    String sql = "INSERT INTO Resultats(Date_publication, Echantillons_analyse, Id_echantillons) VALUES(?, ?, ?)";

    try (Connection conn = this.connect();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        java.util.Date utilDate = jDateChooser1.getDate();
        java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
        pstmt.setDate(1, sqlDate);
        pstmt.setString(2, jTechaana.getText());
        
        String selectedEchantillon = jComboBox1.getSelectedItem().toString();
        String[] parts = selectedEchantillon.split(" ", 2); // Diviser en deux parties seulement
        int idechantillons = Integer.parseInt(parts[0].trim()); // Extraire l'ID
        pstmt.setInt(3, idechantillons);

        pstmt.executeUpdate();
        JOptionPane.showMessageDialog(null, "Résultat enregistré avec succès");

    } catch (SQLException e) {
        System.out.println(e.getMessage());
    }
}
private void visualiserresultatData() {
        String sql = "SELECT * FROM resultats";
        
        try (Connection conn = this.connect();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("Id_resultats"),
                    rs.getString("Date_publication"),
                    rs.getString("Echantillons_analyse"),
                    rs.getInt("Id_echantillons"),
                };
                model.addRow(row);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erreur lors du chargement des données : " + e.getMessage());
        }
    }
private void initialiserFields() {
        jDateChooser1.setDate(null);
        jTechaana.setText("");
        jComboBox1.setSelectedIndex(0);
    }
    private void modifierresultat() {
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            int Id_resultats = (int) jTable1.getValueAt(selectedRow, 0);
            String sql = "UPDATE resultats SET Date_publication = ?, Echantillons_analyse = ?, Id_echantillons = ? WHERE Id_resultats = ?";

            try (Connection conn = this.connect();
                 PreparedStatement pstmt = conn.prepareStatement(sql)) {

                java.util.Date utilDate = jDateChooser1.getDate();
                java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
                pstmt.setDate(1, sqlDate);
                pstmt.setString(2, jTechaana.getText());
                
                String selectedDemande = jComboBox1.getSelectedItem().toString();
                String[] parts = selectedDemande.split(" ", 2);
                int idechantillons = Integer.parseInt(parts[0].trim());
                pstmt.setInt(3, idechantillons);
                
                pstmt.setInt(4, Id_resultats);

                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Résultat modifié avec succès");
                visualiserresultatData();

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Erreur lors de la modification des données : " + e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un résultat à modifier");
        }
    }
    private void supprimerresultat() {
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            String echantillonsId = jTable1.getValueAt(selectedRow, 0).toString();
            String sql = "DELETE FROM resultats WHERE Id_resultats = ?";

            try (Connection conn = this.connect();
                 PreparedStatement pstmt = conn.prepareStatement(sql)) {

                pstmt.setString(1, echantillonsId);
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Résultat supprimé avec succès");
                visualiserresultatData();
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Veuillez sélectionner un Résultat à supprimer");
        }
    }
private void  rechercherresultat() {
        String searchTerm = jTrechercher.getText();
        String sql = "SELECT * FROM resultats WHERE  Date_publication LIKE ? OR Echantillons_analyse LIKE ? OR Id_echantillons LIKE ?";
        
        try (Connection conn = this.connect();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {
            
            String searchPattern = "%" + searchTerm + "%";
            pstmt.setString(1, searchPattern);
            pstmt.setString(2, searchPattern);
            pstmt.setString(3, searchPattern);
             
            ResultSet rs = pstmt.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);

            while (rs.next()) {
                model.addRow(new Object[]{
                        rs.getInt("Id_resultats"),
                        rs.getString("Date_publication"),
                        rs.getString("Echantillons_analyse"),
                        rs.getInt("Id_echantillons"),
                });
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formresultat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formresultat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formresultat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formresultat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formresultat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBenregistrer;
    private javax.swing.JButton jBinitialiser;
    private javax.swing.JButton jBmodifier;
    private javax.swing.JButton jBrechercher;
    private javax.swing.JButton jBsupprimer;
    private javax.swing.JButton jBvisualiser;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLdateresu;
    private javax.swing.JLabel jLechaana;
    private javax.swing.JLabel jLinfoecha;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTechaana;
    private javax.swing.JTextField jTrechercher;
    // End of variables declaration//GEN-END:variables
}
